<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nki.t1.dao.PostsMapper">
    <sql id="searchCondition">
        <choose>
            <when test='option == "title"'>
                AND posts.title LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option == "id"'>
                AND users.id LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option == "content"'>
                AND posts.content LIKE concat('%', #{keyword}, '%')
            </when>
            <otherwise>
                AND (posts.title LIKE concat('%', #{keyword}, '%')
                OR users.id LIKE concat('%', #{keyword}, '%')
                OR posts.content LIKE concat('%', #{keyword}, '%'))
            </otherwise>
        </choose>

    </sql>

    <sql id="selectPosts">
        SELECT posts.pno        AS pno,
               posts.uno        AS uno,
               users.id         AS userId,
               posts.title      AS title,
               posts.content    AS content,
               posts.views      AS views,
               posts.created_at AS createdAt,
               posts.updated_at AS updatedAt
        FROM posts
            LEFT JOIN users ON posts.uno = users.uno
        WHERE posts.del = 0
    </sql>

    <select id="countPost" parameterType="SearchCondition" resultType="int">
        SELECT count(*)
        FROM posts
            LEFT JOIN users ON posts.uno = users.uno
        WHERE posts.del = 0
        <include refid="searchCondition"/>
    </select>

    <select id="selectPage" parameterType="SearchCondition" resultType="PostDto">
        <include refid="selectPosts"/>
        <include refid="searchCondition"/>
        ORDER BY posts.created_at desc, posts.pno desc
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="selectPost" parameterType="int" resultType="PostDto">
        <include refid="selectPosts"/>
        AND posts.pno = #{pno}
    </select>

    <insert id="insertPost" parameterType="PostDto">
        <selectKey keyProperty="pno" order="BEFORE" resultType="int">
            SELECT ifnull(max(pno), 0) + 1 as new_pno from posts
        </selectKey>
        INSERT INTO posts (pno, uno, title, content, del)
        VALUES (#{pno}, #{uno}, #{title}, #{content}, 0)
    </insert>

    <update id="increaseView" parameterType="int">
        UPDATE posts
        SET views = views + 1
        WHERE pno = #{pno}
          AND del = 0
    </update>

    <update id="updatePost" parameterType="PostDto">
        UPDATE posts
        SET title      = #{title},
            content    = #{content},
            updated_at = now()
        WHERE pno = #{pno}
          AND del = 0
    </update>

    <delete id="deletePost" parameterType="map">
        UPDATE posts
        SET del = 1
        WHERE pno = #{pno}
          AND uno = #{uno}
    </delete>
</mapper>